/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | Copyright (C) 2018 OpenFOAM Foundation
     \\/     M anipulation  |
-------------------------------------------------------------------------------
License
    This file is part of OpenFOAM.

    OpenFOAM is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.

Class
    Foam::Princeton

Description

SourceFiles
    PrincetonPressure.C

\*---------------------------------------------------------------------------*/

#ifndef PrincetonPressure_H
#define PrincetonPressure_H

#include "granularPressureModel.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{
namespace kineticTheoryModels
{
namespace granularPressureModels
{

/*---------------------------------------------------------------------------*\
                           Class Princeton Declaration
\*---------------------------------------------------------------------------*/

class Princeton
:
    public granularPressureModel
{

public:

    //- Runtime type information
    TypeName("Princeton");


    // Constructors

        //- Construct from components
        Princeton(const dictionary& dict, const kineticTheorySystem& kt);


    //- Destructor
    virtual ~Princeton();


    // Member Functions

        //- Granular pressure coefficient
        virtual tmp<volScalarField> granularPressureCoeff
        (
            const phaseModel& phase1,
            const phaseModel& phase2,
            const volScalarField& Theta1,
            const volScalarField& Theta2,
            const volScalarField& g0,
            const dimensionedScalar& e
        ) const;

        //- Derivative of the granular pressure coefficient
        virtual tmp<volScalarField> granularPressureCoeffPrime
        (
            const phaseModel& phase1,
            const phaseModel& phase2,
            const volScalarField& Theta1,
            const volScalarField& Theta2,
            const volScalarField& g0,
            const volScalarField& g0prime,
            const dimensionedScalar& e
        ) const;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace granularPressureModels
} // End namespace kineticTheoryModels
} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
